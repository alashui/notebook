#costmap原理
##1.概述
通过先验的静态地图和传感器数据构建可用于导航的代价地图(costmap)

 costmap_2d包提供了一种2D代价地图的实现方案，该方案从实际环境中获取传感器数据，构建数据的2D或3D占用栅（取决于是否使用基于体素的实现），以及基于占用栅格和用户定义膨胀半径的2D代价地图的膨胀代价。
  该包也支持基于map_server初始化代价地图，基于滚动窗口的代价地图，以及基于参数化订阅和配置传感器主题。

costmap_2d包提供了一种可配置框架来维护机器人在占用栅格应该如何导航的信息。代价地图使用传感器数据和来自静态地图的信息，通过costmap_2d :: Costmap2DROS对象来存储和更新实际环境中的障碍物信息。

* 标记与清除
成本图自动预订ROS上的传感器话题，并相应进行更新。每个传感器可以执行标记操作（将障碍物信息插入到成本图中），清除操作（从成本图中删除障碍物信息）或两者都同时执行。标记操作就是索引到数组内修改单元格的代价。然而对于清除操作，每次观测报告都需要传感器源向外发射线。如果存储的障碍物信息是3D的，需要将每一列的障碍物信息投影成2D后才能放入到代价地图。